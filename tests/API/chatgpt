const { test, expect } = require('@playwright/test');
const axios = require('axios');
const fs = require('fs');

const baseURL = 'https://jsonplaceholder.typicode.com';

// Test to get data, reverse it, and save as an artifact
test('Workflow (including manipulation) - Get Data, Reverse It, and Save as Artifact', async () => {
  // Collect data
  const response = await axios.get(`${baseURL}/posts`);
  const posts = response.data;

  // Manipulate data (reversing the order)
  const reversedPosts = posts.reverse();

  // Save manipulated data as an artifact
  fs.writeFileSync('artifact.json', JSON.stringify(reversedPosts, null, 2));
});

// Test to get the last 5 posts, reverse them, and save as an artifact
test('Manipulation - Get Data, Extract Last 5 Posts, Reverse Results, and Save as an Artifact', async () => {
  // Collect data
  const response = await axios.get(`${baseURL}/posts`);
  const posts = response.data;

  // Select the last 5 results
  const lastFivePosts = posts.slice(-5);

  // Manipulate data (reversing the order)
  const reversedPosts = lastFivePosts.reverse();

  // Save manipulated data as an artifact
  fs.writeFileSync('artifactLast5.json', JSON.stringify(reversedPosts, null, 2));
});

// Additional API Tests
test.describe('Additional API Tests', () => {
  test('GET - Assert Response Status (Not Found)', async ({ request }) => {
    const response = await request.get(`${baseURL}/posts/invalid-post`);
    expect(response.status()).toBe(404);
  });

  test('GET - JSON Parsing', async ({ request }) => {
    const response = await request.get(`${baseURL}/posts/2`);
    expect(response.status()).toBe(200);

    const responseParsed = JSON.parse(await response.text());
    console.log(responseParsed);
  });

  test('GET - Simple Get Test - Retrieve Comments', async ({ request }) => {
    const response = await request.get(`${baseURL}/posts/1/comments`);
    expect(response.status()).toBe(200);

    const responseParsed = JSON.parse(await response.text());
    console.log(responseParsed);
  });
});
